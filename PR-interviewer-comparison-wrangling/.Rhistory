# ================================================================== #
# PAPER TITLE
# ================================================================== #
# This syntax file analyses the results from the
# trust-culture-heterogeneity-estimation.R file
# ================================================================== #
# Setup ----
# Clear the workspace
rm( list = ls() )
# Load the libraries used
library( CCTpack )  # for the cultural consensus models
library( here )     # for calling local directory
library( dplyr )    # for working with the data
library( reshape2 ) # for reworking the data
library( ggplot2 )  # for plotting
library( psych )    # for reliability analysis
# ================================================================== #
# load the trust variables ----
# load the data
trust.vars <- readRDS( file = here( "trust-culture-rodeo/trust.fit.data.rds" ) )
# ================================================================== #
# Load the estimated models ----
# load the object and set the name
trust.fit.2.diff <- load( here( "trust-culture-rodeo/trust.fit.2.diff.Rdata" ) )
trust.fit.2.diff <- cctfit
# ================================================================== #
# Build Figure 4 of cultural knowledge ----
# build the object to plot
knowledgeDat <- data.frame(
assignmentID = trust.fit.2.diff$subj[,1],
culture      = trust.fit.2.diff$subj[,2],
knowledge    = trust.fit.2.diff$subj[,3]
)
# recode the cultural model assignment to make group 2 group 1
# and group 1 group 2 (this is for ease of interpretation)
cultureRecoded <- knowledgeDat$culture
cultureRecoded[ knowledgeDat$culture == 2 ] <- 0
cultureRecoded[ knowledgeDat$culture == 1 ] <- 2
cultureRecoded[ knowledgeDat$culture == 2 ] <- 1
knowledgeDat$cultureRecoded <- cultureRecoded
# Calculate mean for each group
culturalMeansSds <- knowledgeDat %>%
group_by( cultureRecoded ) %>%
summarise( mean_knowledge = round( mean( knowledge ), 2 ),
sd_knowledge = round( sd( knowledge ), 2 ) )
# Add a new variable that ranks responses within each group
knowledgeDat <- knowledgeDat %>%
arrange( cultureRecoded, knowledge ) %>%
mutate( rank_knowledge = row_number() )
# Create the scatterplot
knowledgePlot <- ggplot( knowledgeDat,
aes( x = rank_knowledge,
y = knowledge,
color = as.factor( cultureRecoded ) ) ) +
geom_point() +
labs( title = "Scatterplot of Respondent Knowledge by Relationship Model",
x = "Respondents",
y = "Knowledge") +
geom_hline( data = culturalMeansSds,
aes( yintercept = mean_knowledge, colour = as.factor( cultureRecoded ) ) ) +
theme_minimal() +
theme( legend.position = "top",
axis.text.x = element_blank() ) +
guides( color = guide_legend( title = "Relationship Model: " ) )
print( knowledgePlot )
# export the image
pdf( file = here( "trust-culture-figures/figure-4-trust-knowledge.pdf" ) )
print( knowledgePlot )
dev.off()
# ================================================================== #
# Build the descriptives for the PAR table ----
trust.vars.temp <- readRDS( file = here( "trust-culture-rodeo/trust.fit.data.rds" ) )
rhps.vars.temp  <- readRDS( file = here( "trust-culture-rodeo/trust.rhps.cntrls.vars.data.rds" ) )
# trust variables
round( apply( trust.vars.temp[,-1], 2, mean ), 2 )
round( apply( trust.vars.temp[,-1], 2, sd ), 2 )
# check alpha for trust vars
alpha( trust.vars.temp[,-1] )
