colnames( datThemes ) <- c( "ASU.Yes", "INI.Yes" )
# create the object to store the results
results <- matrix( NA, nrow = dim( datThemes )[1], ncol = 2 )
# loop the function over the results object
for( i in 1:dim( datThemes )[1] ){
results[i,] <- round(
test.table(
n_ASU_y_THEME_y = datThemes[i,1],
n_INI_y_THEME_y = datThemes[i,2]
),
3
)
}
# assign labels to the columns
colnames( results ) <- c( "chivalue", "pvalue" )
# coerce to data frame
results <- as.data.frame( results )
# create reject/fail based on unadjusted
results$reject <- ifelse( results$pvalue < 0.05, "Yes", "No" )
# Create reject/fail to reject based on bonferroni
results$Bonf.reject <- ifelse( results$pvalue < round( 0.05 / dim( datThemes )[1], 3 ), "Yes", "No" )
# ----
# Create the proportions to use for the plot
datThemes <- as.data.frame( datThemes )
# create the proportions
datThemes$ASU.Yes.p <- round( datThemes$ASU.Yes / 80, 3 )
datThemes$INI.Yes.p <- round( datThemes$INI.Yes / 78 , 3 )
# create the difference used to sort below
datThemes$diff <- abs( datThemes$ASU.Yes.p - datThemes$INI.Yes.p )
# Create vector of names for the plot
datThemes$custom_labels <- c(
paste("Q1t",rep( 1:dim( s1q1Themes )[1] ), sep = "" ),
paste("Q2t",rep( 1:dim( s1q2Themes )[1] ), sep = "" ),
paste("Q3t",rep( 1:dim( s1q3Themes )[1] ), sep = "" ),
paste("Q4t",rep( 1:dim( s1q4Themes )[1] ), sep = "" ),
paste("Q5t",rep( 1:dim( s1q5Themes )[1] ), sep = "" ),
paste("Q6t",rep( 1:dim( s1q6Themes )[1] ), sep = "" ),
paste("Q7t",rep( 1:dim( s1q7Themes )[1] ), sep = "" )
)
# add the results
datThemes$reject <- results$reject
# ----
# Create the objects for the plot
# define parts of the plot
y.ax <- seq( 1: dim( datThemes )[1] )
cols <- c( "#eb5636","#a709f7" )
pchs <- c(
rep( 0, dim( datThemes )[1] - 1 ),
rep( 15, 1 ),
rep( 1, dim( datThemes )[1] - 1 ),
rep( 16, 1 )
)
# labels for the legend
legend_labels <- c(
"Outside Interviewer",
"Inside Interviewer"
)
# execute plot
plot(
seq( 0, 1, length.out = dim( datThemes )[1] ),
y.ax,
type = "n",
xlab = "Proportions with thematic element",
ylab = "",
yaxt = "n"
)
# set up points for the plot
points( datThemes$ASU.Yes.p[order(datThemes$diff)], y.ax, col = cols[1], pch = pchs[1:53] )
points( datThemes$INI.Yes.p[order(datThemes$diff)], y.ax, col = cols[2], pch = pchs[54:106] )
# add the segments
segments( datThemes$ASU.Yes.p[order(datThemes$diff)],y.ax,
datThemes$INI.Yes.p[order(datThemes$diff)],y.ax,
col = "grey30",
lwd = 1.2
)
axis( side = 2, at = y.ax, las = 1, labels = datThemes$custom_labels[order(datThemes$diff)], cex.axis = 0.8 )
# title( "Figure 3: Proportions for Themes and Differences" )
# add a legend
legend( "bottomright" ,
pch = c( 15,16 ),
col = cols,
legend = legend_labels,
title = "Legend", cex = 0.7
)
# ================================================================== #
# Perryville PAR Interviewer Comparison.
# ================================================================== #
# This file prepares and analyzes the S4Q12a variable.
# There are two steps:
# First the data are separated into three files for coding.
# Second these files are merged and reliability analysis is performed.
# ================================================================== #
# Step 1
# ----
# Clear workspace
rm( list = ls() )
# ----
# load the needed libraries
library( here )  # used for referencing local directory
library( haven ) # used for reading stata files
library( dplyr ) # for filtering data
# ----
# Load the data
dat <- as.data.frame(
read_dta(
here( "../../PV PAR Interviews Full_CLEANED.dta" )
)
)
here( "../../PV PAR Interviews Full_CLEANED.dta" )
dat <- read.csv(
here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/PR-interviewer-vars.csv" ),
as.is = TRUE,
header = TRUE,
stringsAsFactors = FALSE
)
getwd()
here()
source( here( "PR-interviewer-wrangling/PR-interviewer-S4Q-reliability-prep.R" ) )
# ================================================================== #
# TITLE
# ================================================================== #
# This file conducts reliability tests and chi-square tests
# for the S4Q# variables.
# ================================================================== #
# ----
# Clear workspace
rm( list = ls() )
# ----
# load the needed libraries
library( here ) # used for referencing local directory
library( haven ) # used for reading stata files
library( dplyr ) # for filtering data
library( irr )   # for the reliability analysis
here( "PR-interviewer-wrangling/PR-interviewer-S4Q-reliability-prep.R" )
here()
source( here( "/PR-interviewer-wrangling/PR-interviewer-S4Q-reliability-prep.R" ) )
here( "PR-interviewer-wrangling/PR-interviewer-S4Q-reliability-prep.R" )
here( "/PR-interviewer-wrangling/PR-interviewer-S4Q-reliability-prep.R" )
here( "PR-interviewer-wrangling/PR-interviewer-S4Q-reliability-prep.R" )
source( here( "PR-interviewer-wrangling/PR-interviewer-S4Q-reliability-prep.R" ) )
# ================================================================== #
# Perryville PAR Interviewer Comparison.
# ================================================================== #
# This file prepares and analyzes the S4Q12a variable.
# There are two steps:
# First the data are separated into three files for coding.
# Second these files are merged and reliability analysis is performed.
# ================================================================== #
# Setup
# ----
# Clear workspace
rm( list = ls() )
# ----
# load the needed libraries
library( here )  # used for referencing local directory
library( haven ) # used for reading stata files
library( dplyr ) # for filtering data
# ================================================================== #
# Step 1
# This is commented out because it is not used after it has
# already been executed
# These files were just to create the files referenced
# in step 2 below.
# ----
# Load the data
## dat <- read.csv(
##   here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/PR-interviewer-vars.csv" ),
##   as.is = TRUE,
## header = TRUE,
## stringsAsFactors = FALSE
## )
# ----
# Restructure the files and write them to a .csv file.
# take those cases with an ASU interviewer
## dat.asu <- dat %>%
##   select( id, InterviewerType, S4Q12, S4Q12a ) %>%
## filter( InterviewerType == 0 ) %>%
## select( id, S4Q12, S4Q12a )
# take those cases with a Cruz interviewer
## dat.cruz <- dat %>%
## select( id, InterviewerType, S4Q12, S4Q12a ) %>%
##   filter( InterviewerType == 1 ) %>%
## select( id, S4Q12, S4Q12a )
# add a column for coding
## dat.asu$diff  <- rep( 99, dim( dat.asu )[1] )
## dat.cruz$diff <- rep( 99, dim( dat.cruz )[1] )
# add a column for the additional variable
## dat.asu$reas  <- rep( 99, dim( dat.asu )[1] )
## dat.cruz$reas <- rep( 99, dim( dat.cruz )[1] )
# write the files out
## write.csv( dat.asu,  "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code.csv" )
## write.csv( dat.cruz, "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code.csv" )
# ================================================================== #
# Step 2
# ----
# Read in the files
# ASU interviewer files
dat.asu.A <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code-ALEXIS.csv" ) )
dat.asu.K <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code-KEVIN.csv" ) )
dat.asu.J <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code-JACOB.csv" ) )
# Cruz interviewer files
dat.cruz.A <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code-ALEXIS.csv" ) )
dat.cruz.K <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code-KEVIN.csv" ) )
dat.cruz.J <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code-JACOB.csv" ) )
# Build the file for analysis
dat.asu.r <- data.frame(
id = dat.asu.A$id,
diff.A = dat.asu.A$diff, reas.A = dat.asu.A$reas,
diff.K = dat.asu.K$diff, reas.K = dat.asu.K$reas,
diff.J = dat.asu.J$diff, reas.J = dat.asu.J$reas
)
dat.cruz.r <- data.frame(
id = dat.cruz.A$id,
diff.A = dat.cruz.A$diff, reas.A = dat.cruz.A$reas,
diff.K = dat.cruz.K$diff, reas.K = dat.cruz.K$reas,
diff.J = dat.cruz.J$diff, reas.J = dat.cruz.J$reas
)
dat.for.r <- rbind( dat.asu.r, dat.cruz.r )
dat.for.r <- dat.for.r %>% arrange( id )
dat.for.r.diff <- dat.for.r %>% select( diff.A, diff.K, diff.J )
dat.for.r.reas <- dat.for.r %>% select( reas.A, reas.K, reas.J )
dat.for.r.diff.asu <- dat.asu.r %>% select( diff.A, diff.K, diff.J )
dat.for.r.diff.cruz <- dat.cruz.r %>% select( diff.A, diff.K, diff.J )
dat.for.r.reas.asu <- dat.asu.r %>% select( reas.A, reas.K, reas.J )
dat.for.r.reas.cruz <- dat.cruz.r %>% select( reas.A, reas.K, reas.J )
# ----
# compare differences for comfort level
dat <- as.data.frame(
read_dta(
here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/PR-interviewer-vars.csv" ),
)
)
# ================================================================== #
# Perryville PAR Interviewer Comparison.
# ================================================================== #
# This file prepares and analyzes the S4Q12a variable.
# There are two steps:
# First the data are separated into three files for coding.
# Second these files are merged and reliability analysis is performed.
# ================================================================== #
# Setup
# ----
# Clear workspace
rm( list = ls() )
# ----
# load the needed libraries
library( here )  # used for referencing local directory
library( haven ) # used for reading stata files
library( dplyr ) # for filtering data
# ================================================================== #
# Perryville PAR Interviewer Comparison.
# ================================================================== #
# This file prepares and analyzes the S4Q12a variable.
# There are two steps:
# First the data are separated into three files for coding.
# Second these files are merged and reliability analysis is performed.
# ================================================================== #
# Setup
# ----
# Clear workspace
rm( list = ls() )
# ----
# load the needed libraries
library( here )  # used for referencing local directory
library( haven ) # used for reading stata files
library( dplyr ) # for filtering data
# ================================================================== #
# Step 1
# This is commented out because it is not used after it has
# already been executed
# These files were just to create the files referenced
# in step 2 below.
# ----
# Load the data
## dat <- read.csv(
##   here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/PR-interviewer-vars.csv" ),
##   as.is = TRUE,
## header = TRUE,
## stringsAsFactors = FALSE
## )
# ----
# Restructure the files and write them to a .csv file.
# take those cases with an ASU interviewer
## dat.asu <- dat %>%
##   select( id, InterviewerType, S4Q12, S4Q12a ) %>%
## filter( InterviewerType == 0 ) %>%
## select( id, S4Q12, S4Q12a )
# take those cases with a Cruz interviewer
## dat.cruz <- dat %>%
## select( id, InterviewerType, S4Q12, S4Q12a ) %>%
##   filter( InterviewerType == 1 ) %>%
## select( id, S4Q12, S4Q12a )
# add a column for coding
## dat.asu$diff  <- rep( 99, dim( dat.asu )[1] )
## dat.cruz$diff <- rep( 99, dim( dat.cruz )[1] )
# add a column for the additional variable
## dat.asu$reas  <- rep( 99, dim( dat.asu )[1] )
## dat.cruz$reas <- rep( 99, dim( dat.cruz )[1] )
# write the files out
## write.csv( dat.asu,  "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code.csv" )
## write.csv( dat.cruz, "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code.csv" )
# ================================================================== #
# Step 2
# ----
# Read in the files
# ASU interviewer files
dat.asu.A <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code-ALEXIS.csv" ) )
dat.asu.K <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code-KEVIN.csv" ) )
dat.asu.J <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code-JACOB.csv" ) )
# Cruz interviewer files
dat.cruz.A <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code-ALEXIS.csv" ) )
dat.cruz.K <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code-KEVIN.csv" ) )
dat.cruz.J <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code-JACOB.csv" ) )
# Build the file for analysis
dat.asu.r <- data.frame(
id = dat.asu.A$id,
diff.A = dat.asu.A$diff, reas.A = dat.asu.A$reas,
diff.K = dat.asu.K$diff, reas.K = dat.asu.K$reas,
diff.J = dat.asu.J$diff, reas.J = dat.asu.J$reas
)
dat.cruz.r <- data.frame(
id = dat.cruz.A$id,
diff.A = dat.cruz.A$diff, reas.A = dat.cruz.A$reas,
diff.K = dat.cruz.K$diff, reas.K = dat.cruz.K$reas,
diff.J = dat.cruz.J$diff, reas.J = dat.cruz.J$reas
)
dat.for.r <- rbind( dat.asu.r, dat.cruz.r )
dat.for.r <- dat.for.r %>% arrange( id )
dat.for.r.diff <- dat.for.r %>% select( diff.A, diff.K, diff.J )
dat.for.r.reas <- dat.for.r %>% select( reas.A, reas.K, reas.J )
dat.for.r.diff.asu <- dat.asu.r %>% select( diff.A, diff.K, diff.J )
dat.for.r.diff.cruz <- dat.cruz.r %>% select( diff.A, diff.K, diff.J )
dat.for.r.reas.asu <- dat.asu.r %>% select( reas.A, reas.K, reas.J )
dat.for.r.reas.cruz <- dat.cruz.r %>% select( reas.A, reas.K, reas.J )
# ----
# compare differences for comfort level
dat <- as.data.frame(
read_dta(
here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/PR-interviewer-vars.csv" ),
)
)
dat <- as.data.frame(
read_dta(
here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/PR-interviewer-vars.csv" ),
)
)
dat <- as.data.frame(
read_dta(
here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/PV PAR Interviews Full_CLEANED.dta" ),
)
)
# ================================================================== #
# Perryville PAR Interviewer Comparison.
# ================================================================== #
# This file prepares and analyzes the S4Q12a variable.
# There are two steps:
# First the data are separated into three files for coding.
# Second these files are merged and reliability analysis is performed.
# ================================================================== #
# Setup
# ----
# Clear workspace
rm( list = ls() )
# ----
# load the needed libraries
library( here )  # used for referencing local directory
library( haven ) # used for reading stata files
library( dplyr ) # for filtering data
# ================================================================== #
# Step 1
# This is commented out because it is not used after it has
# already been executed
# These files were just to create the files referenced
# in step 2 below.
# ----
# Load the data
## dat <- read.csv(
##   here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/PR-interviewer-vars.csv" ),
##   as.is = TRUE,
## header = TRUE,
## stringsAsFactors = FALSE
## )
# ----
# Restructure the files and write them to a .csv file.
# take those cases with an ASU interviewer
## dat.asu <- dat %>%
##   select( id, InterviewerType, S4Q12, S4Q12a ) %>%
## filter( InterviewerType == 0 ) %>%
## select( id, S4Q12, S4Q12a )
# take those cases with a Cruz interviewer
## dat.cruz <- dat %>%
## select( id, InterviewerType, S4Q12, S4Q12a ) %>%
##   filter( InterviewerType == 1 ) %>%
## select( id, S4Q12, S4Q12a )
# add a column for coding
## dat.asu$diff  <- rep( 99, dim( dat.asu )[1] )
## dat.cruz$diff <- rep( 99, dim( dat.cruz )[1] )
# add a column for the additional variable
## dat.asu$reas  <- rep( 99, dim( dat.asu )[1] )
## dat.cruz$reas <- rep( 99, dim( dat.cruz )[1] )
# write the files out
## write.csv( dat.asu,  "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code.csv" )
## write.csv( dat.cruz, "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code.csv" )
# ================================================================== #
# Step 2
# ----
# Read in the files
# ASU interviewer files
dat.asu.A <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code-ALEXIS.csv" ) )
dat.asu.K <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code-KEVIN.csv" ) )
dat.asu.J <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-asu-to-code-JACOB.csv" ) )
# Cruz interviewer files
dat.cruz.A <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code-ALEXIS.csv" ) )
dat.cruz.K <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code-KEVIN.csv" ) )
dat.cruz.J <- read.csv( here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/interviewer-cruz-to-code-JACOB.csv" ) )
# Build the file for analysis
dat.asu.r <- data.frame(
id = dat.asu.A$id,
diff.A = dat.asu.A$diff, reas.A = dat.asu.A$reas,
diff.K = dat.asu.K$diff, reas.K = dat.asu.K$reas,
diff.J = dat.asu.J$diff, reas.J = dat.asu.J$reas
)
dat.cruz.r <- data.frame(
id = dat.cruz.A$id,
diff.A = dat.cruz.A$diff, reas.A = dat.cruz.A$reas,
diff.K = dat.cruz.K$diff, reas.K = dat.cruz.K$reas,
diff.J = dat.cruz.J$diff, reas.J = dat.cruz.J$reas
)
dat.for.r <- rbind( dat.asu.r, dat.cruz.r )
dat.for.r <- dat.for.r %>% arrange( id )
dat.for.r.diff <- dat.for.r %>% select( diff.A, diff.K, diff.J )
dat.for.r.reas <- dat.for.r %>% select( reas.A, reas.K, reas.J )
dat.for.r.diff.asu <- dat.asu.r %>% select( diff.A, diff.K, diff.J )
dat.for.r.diff.cruz <- dat.cruz.r %>% select( diff.A, diff.K, diff.J )
dat.for.r.reas.asu <- dat.asu.r %>% select( reas.A, reas.K, reas.J )
dat.for.r.reas.cruz <- dat.cruz.r %>% select( reas.A, reas.K, reas.J )
# ----
# compare differences for comfort level
dat <- as.data.frame(
read_dta(
here( "PR-interviewer-wrangling/PR-interviewer-wrangling-data/PV PAR Interviews Full_CLEANED.dta" ),
)
)
dat.type <- dat %>% select( id, InterviewerType, Randomize )
dat.for.comp <- dat.for.r %>% select( diff.A, diff.K, diff.J )
dat.for.comp <- cbind( dat.type, dat.for.comp )
comps <- dat.for.comp %>%
select( diff.A, diff.K, diff.J ) %>%
rowwise %>%
mutate( match = n_distinct( unlist( cur_data() ) ) == 1 ) %>%
ungroup()
dat.for.comp$match <- comps$match
dat.for.comp.A <- dat.for.comp %>%
select( InterviewerType, diff.A, Randomize ) %>%
filter( Randomize == 1) %>%
mutate( matters.A = na_if( diff.A, 99 ) )
dat.for.comp.K <- dat.for.comp %>%
select( InterviewerType, diff.K, Randomize ) %>%
filter( Randomize == 1) %>%
mutate( matters.K = na_if( diff.K, 99 ) )
dat.for.comp.J <- dat.for.comp %>%
select( InterviewerType, diff.J, Randomize ) %>%
filter( Randomize == 1) %>%
mutate( matters.J = na_if( diff.J, 99 ) )
dat.for.comp.ALL <- dat.for.comp %>%
select( InterviewerType, match, diff.A, Randomize ) %>%
filter( match == TRUE & Randomize == 1 ) %>%
mutate( matters = na_if( diff.A, 99 ) )
# ================================================================== #
# TITLE
# ================================================================== #
# This file conducts reliability tests and chi-square tests
# for the S4Q# variables.
# ================================================================== #
# ----
# Clear workspace
rm( list = ls() )
# ----
# load the needed libraries
library( here ) # used for referencing local directory
library( haven ) # used for reading stata files
library( dplyr ) # for filtering data
library( irr )   # for the reliability analysis
# ----
# Run the script to load the objects you need
source( here( "PR-interviewer-wrangling/PR-interviewer-S4Q-reliability-prep.R" ) )
ls()
agree.diff <- agree( dat.for.r.diff )
agree.reas <- agree( dat.for.r.reas )
rel.diff <- kappam.light( dat.for.r.diff )
rel.reas <- kappam.light( dat.for.r.reas )
agree.diff.asu <- agree( dat.for.r.diff.asu )
agree.reas.asu <- agree( dat.for.r.reas.asu )
rel.diff.asu <- kappam.light( dat.for.r.diff.asu )
rel.reas.asu <- kappam.light( dat.for.r.reas.asu )
agree.diff.cruz <- agree( dat.for.r.diff.cruz )
agree.reas.cruz <- agree( dat.for.r.reas.cruz )
rel.diff.cruz <- kappam.light( dat.for.r.diff.cruz )
rel.reas.cruz <- kappam.light( dat.for.r.reas.cruz )
agree.diff
rel.diff
chisq.test( dat.for.comp.ALL$InterviewerType, dat.for.comp.ALL$matters )
chisq.test( dat.for.comp.A$InterviewerType, dat.for.comp.A$matters.A )
chisq.test( dat.for.comp.K$InterviewerType, dat.for.comp.K$matters.K )
chisq.test( dat.for.comp.J$InterviewerType, dat.for.comp.J$matters.J )
t.test( matters ~ InterviewerType, data = dat.for.comp.ALL )
t.test( matters.A ~ InterviewerType, data = dat.for.comp.A )
t.test( matters.K ~ InterviewerType, data = dat.for.comp.K )
t.test( matters.J ~ InterviewerType, data = dat.for.comp.J )
dat.for.comp.ALL$InterviewerType
dat.for.comp.AL
dat.for.comp.ALL
